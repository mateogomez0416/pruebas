function getURLVar(key) {
	var value = [];

	var query = String(document.location).split('?');

	if (query[1]) {
		var part = query[1].split('&');

		for (i = 0; i < part.length; i++) {
			var data = part[i].split('=');

			if (data[0] && data[1]) {
				value[data[0]] = data[1];
			}
		}

		if (value[key]) {
			return value[key];
		} else {
			return '';
		}
	}
}

function adapt(){
	if ($(window).width() < 768) {
		$(".here_blocks").removeClass("hidden")
		$("#column-left .blocks").addClass("hidden")
	}else{
		$(".here_blocks").addClass("hidden")
		$("#column-left .blocks").removeClass("hidden")
	}
}

$(document).on("click",".flag",function(e){
	e.preventDefault();
	var rel = $(e.currentTarget).attr("href");
	setCookie('googtrans', '/es/'+rel.split('#')[1]+'', 1);
	window.location="#googtrans(es|"+rel.split('#')[1]+")";
	window.location.reload()
	
})

$(window).resize(function(){
	adapt()
})

$(document).ready(function() {

	//Is inside iframe
	if (window!=window.top)
	{ 
		//$('body').find('header').hide();
	    //$('body').find('#top').hide();
	    //$('body').find('footer').hide();
	    //$('body').find('.container').css('width','100%');
	}
	
	$('.carousel[data-type="multi"] .item').each(function() {
		var next = $(this).next();
		if (!next.length) {
			next = $(this).siblings(':first');
		}
		next.children(':first-child').clone().appendTo($(this));
	
		for (var i = 0; i < 3; i++) {
			next = next.next();
			if (!next.length) {
				next = $(this).siblings(':first');
			}
	
			next.children(':first-child').clone().appendTo($(this));
		}
	});

	$(".here_blocks").html($("#column-left .blocks").html())
	
	adapt()
	
	// Instantiate the Bloodhound suggestion engine
	var result_p = new Bloodhound({
		datumTokenizer: function (datum) {
			return Bloodhound.tokenizers.whitespace(datum.value);
		},
		queryTokenizer: Bloodhound.tokenizers.whitespace,
		limit:5,
		remote: {
			url: $("#base_url").val()+'ajax/search?q=%QUERY',
			filter: function (result_p) {
				// Map the remote source JSON array to a JavaScript object array
				return $.map(result_p.results, function (rlt_p) {
					return {
						value: rlt_p.name,
						price: ($(".hiding_price").html() != undefined) ? '' : rlt_p.price,
						img: rlt_p.img,
						des  : rlt_p.des,
						url  : rlt_p.url
					};
				});
			}
		}
	});
	
	// Initialize the Bloodhound suggestion engine
	result_p.initialize();
	
	// Instantiate the Typeahead UI
	$('.typeahead').typeahead(null, {
		displayKey: 'value',
		source: result_p.ttAdapter(),
		templates: {
		  suggestion: Handlebars.compile([
			'<img src="{{img}}" width="50" align="left">',
			'<p class="repo-language">{{price}}</p>',
			'<p class="repo-name">{{value}}</p>',
			'<p class="repo-description">{{des}}</p>'
		  ].join(''))
		},
	}).bind('typeahead:selected', function(obj, selected, name) {
		location.href = ""+$("#base_url").val()+""+selected.url
	}); 
  	
	
	
	$("#info img").addClass("img-responsive")
	
	var container = document.querySelector('.dropdown-inner');
	if(container){
		var msnry = new Masonry( container, {
		  // options
		  columnWidth: 160,
		  itemSelector: '.list-unstyled'
		});
		
		$(".dropdown").hover(function(){
			msnry.layout();
		})
	}
	
	var cant
	
	$(".quantity").focus(function(){
		cant = $(this).val()
	})
	$(".quantity").blur(function(){
		if(cant != $(this).val()){
			$("#frmcart").submit()
		}
	})
	
	var googTrans = getCookie('googtrans');

	googTrans = (googTrans == '') ? '/es/es' : googTrans
	var lang = {};
	lang["/es/en"] = { code: 'en', name: 'Ingles'};
	lang["/es/fr"] = { code: 'fr', name: 'Frances'};
	lang["/es/it"] = { code: 'it', name: 'Italiano'};
	lang["/es/de"] = { code: 'de', name: 'Alemán'};
	lang["/es/pt"] = { code: 'pt', name: 'Portugués'};
	lang["/es/ru"] = { code: 'ru', name: 'Ruso'};
	lang["/es/es"] = { code: 'es', name: 'Español'};
	lang["/es/ar"] = { code: 'ar', name: 'Arabe'};
	lang["/es/zh-CN"] = { code: 'zh-CN', name: 'Chino'};
	lang["/es/ca"] = { code: 'ca', name: 'Catalán'};

	for (var key in lang) {
		if (lang.hasOwnProperty(key)) {
			if(googTrans === key){
				$('#imglang')
				.attr('src',$("#base_url").val()+'public/image/flags/'+lang[key]['code']+'.png')
				.attr('alt',lang[key]['code'])
				.attr('title',lang[key]['code'])
				break;
			}
		}
	}

	// Highlight any found errors
	$('.text-danger').each(function() {
		var element = $(this).parent().parent();
		
		if (element.hasClass('form-group')) {
			element.addClass('has-error');
		}
	});
		
	// Currency
	$('#currency .currency-select').on('click', function(e) {
		e.preventDefault();

		$('#currency input[name=\'code\']').attr('value', $(this).attr('name'));

		$('#currency').submit();
	});

	/* Search */
	$('#search').find('button').on('click', function() {
		url = $("#base_url").val() + 'search/?description=true&sub_category=true';

		var value = $('header input[name=\'search\']').val();

		if (value) {
			url += '&q=' + encodeURIComponent(value);
		}

		location = url;
	});

	$('#search input[name=\'search\']').on('keydown', function(e) {
		if (e.keyCode == 13) {
			$('#search').find('button').trigger('click');
		}
	});

	// Menu
	$('#menu .dropdown-menu').each(function() {
		var menu = $('#menu').offset();
		var dropdown = $(this).parent().offset();

		var i = (dropdown.left + $(this).outerWidth()) - (menu.left + $('#menu').outerWidth());

		if (i > 0) {
			$(this).css('margin-left', '-' + (i + 5) + 'px');
		}
	});

	// Product List
	$('#list-view').click(function() {
		$('#content .product-layout > .clearfix').remove();

		$('#content .product-layout').attr('class', 'product-layout product-list col-xs-12');

		localStorage.setItem('display', 'list');
	});

	// Product Grid
	$('#grid-view').click(function() {
		$('#content .product-layout > .clearfix').remove();

		// What a shame bootstrap does not take into account dynamically loaded columns
		cols = $('#column-right, #column-left').length;

		
		if (cols == 2) {
			$('#content .product-layout').attr('class', 'product-layout product-grid col-lg-6 col-md-6 col-sm-6 col-xs-6');

			$('#content .product-layout:nth-child(2)').after('<div class="clearfix visible-md visible-sm"></div>');
		} else if (cols == 1) {
			$('#content .product-layout').attr('class', 'product-layout product-grid col-lg-4 col-md-4 col-sm-6 col-xs-6');

			$('#content .product-layout:nth-child(3)').after('<div class="clearfix visible-lg"></div>');
		} else {
			$('#content .product-layout').attr('class', 'product-layout product-grid col-lg-3 col-md-3 col-sm-6 col-xs-6');

			$('#content .product-layout:nth-child(4)').after('<div class="clearfix"></div>');
		}

		 localStorage.setItem('display', 'grid');
	});

	if (localStorage.getItem('display') == 'list') {
		$('#list-view').trigger('click');
	} else {
		$('#grid-view').trigger('click');
	}

	// tooltips on hover
	$('[data-toggle=\'tooltip\']').tooltip({container: 'body'});

	// Makes tooltips work on ajax generated content
	$(document).ajaxStop(function() {
		$('[data-toggle=\'tooltip\']').tooltip({container: 'body'});
	});
});


// Cart add remove functions
var cart = {
	'add': function(product_id, quantity) {
		$.ajax({
			url: $("#base_url").val()+'cesta/add',
			type: 'post',
			data: 'product_id=' + product_id + '&quantity=' + (typeof(quantity) != 'undefined' ? quantity : 1),
			dataType: 'json',
			beforeSend: function() {
				//$('#cart > button').button('loading');
			},
			success: function(json) {
				$('.alert, .text-danger').remove();

				//$('#cart > button').button('reset');

				if (json['redirect']) {
					location = json['redirect'];
				}

				if (json['success']) {
					$('#content').parent().before('<div class="alert alert-success"><i class="fa fa-check-circle"></i> ' + json['success'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');

					$('#cart-total').html(json['total']);
					$('#cart-total-2').html(json['total2']);

					$('html, body').animate({ scrollTop: 0 }, 'slow');

					$('#cart > ul').load($("#base_url").val()+'cesta/info ul li');
					$('.cart-sticky > ul').load($("#base_url").val()+'cesta/info_cart ul li');
				}
			}
		});
	},
	'update': function(key, quantity) {
		$.ajax({
			url: $("#base_url").val()+'cesta/update',
			type: 'post',
			data: 'key=' + key + '&quantity=' + (typeof(quantity) != 'undefined' ? quantity : 1),
			dataType: 'json',
			beforeSend: function() {
				//$('#cart > button').button('loading');
			},
			success: function(json) {
				//$('#cart > button').button('reset');

				$('#cart-total').html(json['total']);

				if ($("#str_url").val() == 'cesta' || $("#str_url").val() == 'pagar') {
					location = $("#base_url").val()+'cesta';
				} else {
					$('#cart > ul').load($("#base_url").val()+'cesta/info ul li');
					$('.cart-sticky > ul').load($("#base_url").val()+'cesta/info_cart ul li');
				}
			}
		});
	},
	'remove': function(key) {
		$.ajax({
			url: $("#base_url").val()+'cesta/remove',
			type: 'post',
			data: 'key=' + key,
			dataType: 'json',
			beforeSend: function() {
				//$('#cart > button').button('loading');
			},
			success: function(json) {
				//$('#cart > button').button('reset');				
				
				$('#cart-total').html(json['total']);

				if ($("#str_url").val() == 'cesta' || $("#str_url").val() == 'pagar') {
					location = $("#base_url").val()+'cesta';
				} else {
					$('#cart > ul').load($("#base_url").val()+'cesta/info ul li');
					$('.cart-sticky > ul').load($("#base_url").val()+'cesta/info_cart ul li');
				}
			}
		});
	}
}

var voucher = {
	'add': function() {

	},
	'remove': function(key) {
		$.ajax({
			url: 'index.php?route=checkout/cart/remove',
			type: 'post',
			data: 'key=' + key,
			dataType: 'json',
			beforeSend: function() {
				$('#cart > button').button('loading');
			},
			complete: function() {
				$('#cart > button').button('reset');
			},
			success: function(json) {
				$('#cart-total').html(json['total']);

				if (getURLVar('route') == 'checkout/cart' || getURLVar('route') == 'checkout/checkout') {
					location = 'index.php?route=checkout/cart';
				} else {
					$('#cart > ul').load('index.php?route=common/cart/info ul li');
				}
			}
		});
	}
}

var wishlist = {
	'add': function(product_id) {
		$.ajax({
			url: $("#base_url").val()+'favoritos/add',
			type: 'post',
			data: 'product_id=' + product_id,
			dataType: 'json',
			success: function(json) {
				$('.alert').remove();

				if (json['success']) {
					$('#content').parent().before('<div class="alert alert-success"><i class="fa fa-check-circle"></i> ' + json['success'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
				}

				if (json['info']) {
					$('#content').parent().before('<div class="alert alert-info"><i class="fa fa-info-circle"></i> ' + json['info'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
				}

				$('#wishlist-total').html(json['total']);

				$('html, body').animate({ scrollTop: 0 }, 'slow');
			}
		});
	},
	'remove': function() {

	}
}

var compare = {
	'add': function(product_id) {
		$.ajax({
			url: $("#base_url").val()+'comparar/add',
			type: 'post',
			data: 'product_id=' + product_id,
			dataType: 'json',
			success: function(json) {
				$('.alert').remove();

				if (json['success']) {
					$('#content').parent().before('<div class="alert alert-success"><i class="fa fa-check-circle"></i> ' + json['success'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');

					$('#compare-total').html(json['total']);

					$('html, body').animate({ scrollTop: 0 }, 'slow');
				}
			}
		});
	},
	'remove': function() {

	}
}

/* Agree to Terms */
$(document).delegate('.agree', 'click', function(e) {
	e.preventDefault();

	$('#modal-agree').remove();

	var element = this;

	$.ajax({
		url: $(element).attr('href'),
		type: 'get',
		dataType: 'html',
		success: function(data) {
			html  = '<div id="modal-agree" class="modal">';
			html += '  <div class="modal-dialog">';
			html += '    <div class="modal-content">';
			html += '      <div class="modal-header">';
			html += '        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>';
			html += '        <h4 class="modal-title">' + $(element).text() + '</h4>';
			html += '      </div>';
			html += '      <div class="modal-body">' + data + '</div>';
			html += '    </div';
			html += '  </div>';
			html += '</div>';

			$('body').append(html);

			$('#modal-agree').modal('show');
		}
	});
});

/* Autocomplete */
(function($) {
	function Autocomplete(element, options) {
		this.element = element;
		this.options = options;
		this.timer = null;
		this.items = new Array();

		$(element).attr('autocomplete', 'off');
		$(element).on('focus', $.proxy(this.focus, this));
		$(element).on('blur', $.proxy(this.blur, this));
		$(element).on('keydown', $.proxy(this.keydown, this));

		$(element).after('<ul class="dropdown-menu"></ul>');
		$(element).siblings('ul.dropdown-menu').delegate('a', 'click', $.proxy(this.click, this));
	}

	Autocomplete.prototype = {
		focus: function() {
			this.request();
		},
		blur: function() {
			setTimeout(function(object) {
				object.hide();
			}, 200, this);
		},
		click: function(event) {
			event.preventDefault();

			value = $(event.target).parent().attr('data-value');

			if (value && this.items[value]) {
				this.options.select(this.items[value]);
			}
		},
		keydown: function(event) {
			switch(event.keyCode) {
				case 27: // escape
					this.hide();
					break;
				default:
					this.request();
					break;
			}
		},
		show: function() {
			var pos = $(this.element).position();

			$(this.element).siblings('ul.dropdown-menu').css({
				top: pos.top + $(this.element).outerHeight(),
				left: pos.left
			});

			$(this.element).siblings('ul.dropdown-menu').show();
		},
		hide: function() {
			$(this.element).siblings('ul.dropdown-menu').hide();
		},
		request: function() {
			clearTimeout(this.timer);

			this.timer = setTimeout(function(object) {
				object.options.source($(object.element).val(), $.proxy(object.response, object));
			}, 200, this);
		},
		response: function(json) {
			html = '';

			if (json.length) {
				for (i = 0; i < json.length; i++) {
					this.items[json[i]['value']] = json[i];
				}

				for (i = 0; i < json.length; i++) {
					if (!json[i]['category']) {
						html += '<li data-value="' + json[i]['value'] + '"><a href="#">' + json[i]['label'] + '</a></li>';
					}
				}

				// Get all the ones with a categories
				var category = new Array();

				for (i = 0; i < json.length; i++) {
					if (json[i]['category']) {
						if (!category[json[i]['category']]) {
							category[json[i]['category']] = new Array();
							category[json[i]['category']]['name'] = json[i]['category'];
							category[json[i]['category']]['item'] = new Array();
						}

						category[json[i]['category']]['item'].push(json[i]);
					}
				}

				for (i in category) {
					html += '<li class="dropdown-header">' + category[i]['name'] + '</li>';

					for (j = 0; j < category[i]['item'].length; j++) {
						html += '<li data-value="' + category[i]['item'][j]['value'] + '"><a href="#">&nbsp;&nbsp;&nbsp;' + category[i]['item'][j]['label'] + '</a></li>';
					}
				}
			}

			if (html) {
				this.show();
			} else {
				this.hide();
			}

			$(this.element).siblings('ul.dropdown-menu').html(html);
		}
	};

	$.fn.autocomplete = function(option) {
		return this.each(function() {
			var data = $(this).data('autocomplete');

			if (!data) {
				data = new Autocomplete(this, option);

				$(this).data('autocomplete', data);
			}
		});
	}
})(window.jQuery);


function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays*24*60*60*1000));
    var expires = "expires="+d.toUTCString();
    document.cookie = cname + "=" + cvalue + "; " + expires;
}

function getCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for(var i=0;i < ca.length;i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1,c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
    }
    return null;
}

$(window).scroll(function(event) {
  
	$(".block-module").each(function(i, el) {
	  var el = $(el);
	  if (el.visible(true)) {
		el.addClass("come-in"); 
	  } 
	});

	$(".first-block-module").each(function(i, el) {
		var el = $(el);
		if (el.visible(true)) {
		  el.addClass("fade-in"); 
		} 
	  });

	  /*comentarios */
	
  });


/* CountDown Clock v1.0.0.0 - https://github.com/e-piksel/countdown */
(function(e){e.fn.countdown=function(t,n){function o(){var e=new Date(r.date),t=s();var o=e-t;if(o<0){clearInterval(u);if(n&&typeof n==="function")n();return}var a=1e3,f=a*60,l=f*60,c=l*24;var h=Math.floor(o/c),p=Math.floor(o%c/l),d=Math.floor(o%l/f),v=Math.floor(o%f/a);h=String(h).length>=2?h:"0"+h;p=String(p).length>=2?p:"0"+p;d=String(d).length>=2?d:"0"+d;v=String(v).length>=2?v:"0"+v;var m=h===1?r.day:r.days,g=p===1?r.hour:r.hours,y=d===1?r.minute:r.minutes,b=v===1?r.second:r.seconds;i.find(".days").text(h);i.find(".hours").text(p);i.find(".minutes").text(d);i.find(".seconds").text(v);i.find(".days_text").text(m);i.find(".hours_text").text(g);i.find(".minutes_text").text(y);i.find(".seconds_text").text(b)}var r=e.extend({date:null,offset:null,day:"Dia",days:"Dias",hour:"Hora",hours:"Horas",minute:"Minuto",minutes:"Minutos",second:"Segundo",seconds:"Segundos"},t);if(!r.date){e.error("Date is not defined.")}if(!Date.parse(r.date)){e.error("Incorrect date format, it should look like this, 12/24/2012 12:00:00.")}var i=this;var s=function(){var e=new Date;var t=e.getTime()+e.getTimezoneOffset()*6e4;var n=new Date(t+36e5*r.offset);return n};var u=setInterval(o,1e3)}})(jQuery);


(function($) {

	/**
	 * Copyright 2012, Digital Fusion
	 * Licensed under the MIT license.
	 * http://teamdf.com/jquery-plugins/license/
	 *
	 * @author Sam Sehnert
	 * @desc A small plugin that checks whether elements are within
	 *     the user visible viewport of a web browser.
	 *     only accounts for vertical position, not horizontal.
	 */
  
	$.fn.visible = function(partial) {
	  
		var $t            = $(this),
			$w            = $(window),
			viewTop       = $w.scrollTop()-200,
			viewBottom    = viewTop + $w.height(),
			_top          = $t.offset().top,
			_bottom       = _top + $t.height(),
			compareTop    = partial === true ? _bottom : _top,
			compareBottom = partial === true ? _top : _bottom;
	  
	  return ((compareBottom <= viewBottom) && (compareTop >= viewTop));
  
	};
	  
  })(jQuery);